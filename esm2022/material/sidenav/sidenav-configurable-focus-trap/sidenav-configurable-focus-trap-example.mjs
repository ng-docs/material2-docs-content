import { Component } from '@angular/core';
import { NgIf } from '@angular/common';
import { FormControl, FormsModule, ReactiveFormsModule } from '@angular/forms';
import { MatSidenavModule } from '@angular/material/sidenav';
import { MatRadioModule } from '@angular/material/radio';
import { MatButtonModule } from '@angular/material/button';
import { ConfigurableFocusTrapFactory, FocusTrapFactory } from '@angular/cdk/a11y';
import * as i0 from "@angular/core";
import * as i1 from "@angular/material/sidenav";
import * as i2 from "@angular/material/button";
import * as i3 from "@angular/material/radio";
import * as i4 from "@angular/forms";
/** @title Sidenav using injected ConfigurableFocusTrap */
export class SidenavConfigurableFocusTrapExample {
    constructor() {
        this.mode = new FormControl('over');
        this.hasBackdrop = new FormControl(null);
        this.position = new FormControl('start');
        this.shouldRun = /(^|.)(stackblitz|webcontainer).(io|com)$/.test(window.location.host);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.1.1", ngImport: i0, type: SidenavConfigurableFocusTrapExample, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.1.1", type: SidenavConfigurableFocusTrapExample, isStandalone: true, selector: "sidenav-configurable-focus-trap-example", providers: [{ provide: FocusTrapFactory, useClass: ConfigurableFocusTrapFactory }], ngImport: i0, template: "<mat-sidenav-container class=\"example-container\" *ngIf=\"shouldRun\" [hasBackdrop]=\"hasBackdrop.value\">\n  <mat-sidenav #sidenav [mode]=\"mode.value!\" [position]=\"position.value!\">\n    <p><button mat-button (click)=\"sidenav.toggle()\">Toggle</button></p>\n    <p>\n      <label>Test input for drawer<input/></label>\n    </p>\n  </mat-sidenav>\n\n  <mat-sidenav-content>\n    <p><button mat-button (click)=\"sidenav.toggle()\">Toggle</button></p>\n    <p>\n      <mat-radio-group class=\"example-radio-group\" [formControl]=\"mode\">\n        <label>Mode:</label>\n        <mat-radio-button value=\"over\">Over</mat-radio-button>\n        <mat-radio-button value=\"side\">Side</mat-radio-button>\n        <mat-radio-button value=\"push\">Push</mat-radio-button>\n      </mat-radio-group>\n      <mat-radio-group class=\"example-radio-group\" [formControl]=\"hasBackdrop\">\n        <label>Has Backdrop:</label>\n        <mat-radio-button [value]=\"null\">Default</mat-radio-button>\n        <mat-radio-button [value]=\"true\">true</mat-radio-button>\n        <mat-radio-button [value]=\"false\">false</mat-radio-button>\n      </mat-radio-group>\n      <mat-radio-group class=\"example-radio-group\" [formControl]=\"position\">\n        <label>Position:</label>\n        <mat-radio-button value=\"start\">Start</mat-radio-button>\n        <mat-radio-button value=\"end\">End</mat-radio-button>\n      </mat-radio-group>\n    </p>\n    <p>\n      <label>Test input for drawer content<input/></label>\n    </p>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n\n<div *ngIf=\"!shouldRun\">Please open on Stackblitz to see result</div>\n", styles: [".example-container {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n}\n\n.example-radio-group {\n  display: block;\n  border: 1px solid #555;\n  margin: 20px;\n  padding: 10px;\n}\n"], dependencies: [{ kind: "directive", type: NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "ngmodule", type: MatSidenavModule }, { kind: "component", type: i1.MatSidenav, selector: "mat-sidenav", inputs: ["fixedInViewport", "fixedTopGap", "fixedBottomGap"], exportAs: ["matSidenav"] }, { kind: "component", type: i1.MatSidenavContainer, selector: "mat-sidenav-container", exportAs: ["matSidenavContainer"] }, { kind: "component", type: i1.MatSidenavContent, selector: "mat-sidenav-content" }, { kind: "ngmodule", type: MatButtonModule }, { kind: "component", type: i2.MatButton, selector: "    button[mat-button], button[mat-raised-button], button[mat-flat-button],    button[mat-stroked-button]  ", inputs: ["disabled", "disableRipple", "color"], exportAs: ["matButton"] }, { kind: "ngmodule", type: MatRadioModule }, { kind: "directive", type: i3.MatRadioGroup, selector: "mat-radio-group", exportAs: ["matRadioGroup"] }, { kind: "component", type: i3.MatRadioButton, selector: "mat-radio-button", inputs: ["disableRipple", "tabIndex"], exportAs: ["matRadioButton"] }, { kind: "ngmodule", type: FormsModule }, { kind: "directive", type: i4.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "ngmodule", type: ReactiveFormsModule }, { kind: "directive", type: i4.FormControlDirective, selector: "[formControl]", inputs: ["formControl", "disabled", "ngModel"], outputs: ["ngModelChange"], exportAs: ["ngForm"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.1.1", ngImport: i0, type: SidenavConfigurableFocusTrapExample, decorators: [{
            type: Component,
            args: [{ selector: 'sidenav-configurable-focus-trap-example', standalone: true, imports: [
                        NgIf,
                        MatSidenavModule,
                        MatButtonModule,
                        MatRadioModule,
                        FormsModule,
                        ReactiveFormsModule,
                    ], providers: [{ provide: FocusTrapFactory, useClass: ConfigurableFocusTrapFactory }], template: "<mat-sidenav-container class=\"example-container\" *ngIf=\"shouldRun\" [hasBackdrop]=\"hasBackdrop.value\">\n  <mat-sidenav #sidenav [mode]=\"mode.value!\" [position]=\"position.value!\">\n    <p><button mat-button (click)=\"sidenav.toggle()\">Toggle</button></p>\n    <p>\n      <label>Test input for drawer<input/></label>\n    </p>\n  </mat-sidenav>\n\n  <mat-sidenav-content>\n    <p><button mat-button (click)=\"sidenav.toggle()\">Toggle</button></p>\n    <p>\n      <mat-radio-group class=\"example-radio-group\" [formControl]=\"mode\">\n        <label>Mode:</label>\n        <mat-radio-button value=\"over\">Over</mat-radio-button>\n        <mat-radio-button value=\"side\">Side</mat-radio-button>\n        <mat-radio-button value=\"push\">Push</mat-radio-button>\n      </mat-radio-group>\n      <mat-radio-group class=\"example-radio-group\" [formControl]=\"hasBackdrop\">\n        <label>Has Backdrop:</label>\n        <mat-radio-button [value]=\"null\">Default</mat-radio-button>\n        <mat-radio-button [value]=\"true\">true</mat-radio-button>\n        <mat-radio-button [value]=\"false\">false</mat-radio-button>\n      </mat-radio-group>\n      <mat-radio-group class=\"example-radio-group\" [formControl]=\"position\">\n        <label>Position:</label>\n        <mat-radio-button value=\"start\">Start</mat-radio-button>\n        <mat-radio-button value=\"end\">End</mat-radio-button>\n      </mat-radio-group>\n    </p>\n    <p>\n      <label>Test input for drawer content<input/></label>\n    </p>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n\n<div *ngIf=\"!shouldRun\">Please open on Stackblitz to see result</div>\n", styles: [".example-container {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n}\n\n.example-radio-group {\n  display: block;\n  border: 1px solid #555;\n  margin: 20px;\n  padding: 10px;\n}\n"] }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2lkZW5hdi1jb25maWd1cmFibGUtZm9jdXMtdHJhcC1leGFtcGxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMtZXhhbXBsZXMvbWF0ZXJpYWwvc2lkZW5hdi9zaWRlbmF2LWNvbmZpZ3VyYWJsZS1mb2N1cy10cmFwL3NpZGVuYXYtY29uZmlndXJhYmxlLWZvY3VzLXRyYXAtZXhhbXBsZS50cyIsIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzLWV4YW1wbGVzL21hdGVyaWFsL3NpZGVuYXYvc2lkZW5hdi1jb25maWd1cmFibGUtZm9jdXMtdHJhcC9zaWRlbmF2LWNvbmZpZ3VyYWJsZS1mb2N1cy10cmFwLWV4YW1wbGUuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsU0FBUyxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQ3hDLE9BQU8sRUFBQyxJQUFJLEVBQUMsTUFBTSxpQkFBaUIsQ0FBQztBQUNyQyxPQUFPLEVBQUMsV0FBVyxFQUFFLFdBQVcsRUFBRSxtQkFBbUIsRUFBQyxNQUFNLGdCQUFnQixDQUFDO0FBQzdFLE9BQU8sRUFBZ0IsZ0JBQWdCLEVBQUMsTUFBTSwyQkFBMkIsQ0FBQztBQUMxRSxPQUFPLEVBQUMsY0FBYyxFQUFDLE1BQU0seUJBQXlCLENBQUM7QUFDdkQsT0FBTyxFQUFDLGVBQWUsRUFBQyxNQUFNLDBCQUEwQixDQUFDO0FBQ3pELE9BQU8sRUFBQyw0QkFBNEIsRUFBRSxnQkFBZ0IsRUFBQyxNQUFNLG1CQUFtQixDQUFDOzs7Ozs7QUFFakYsMERBQTBEO0FBZ0IxRCxNQUFNLE9BQU8sbUNBQW1DO0lBZmhEO1FBZ0JFLFNBQUksR0FBRyxJQUFJLFdBQVcsQ0FBQyxNQUF1QixDQUFDLENBQUM7UUFDaEQsZ0JBQVcsR0FBRyxJQUFJLFdBQVcsQ0FBQyxJQUFzQixDQUFDLENBQUM7UUFDdEQsYUFBUSxHQUFHLElBQUksV0FBVyxDQUFDLE9BQTBCLENBQUMsQ0FBQztRQUV2RCxjQUFTLEdBQUcsMENBQTBDLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLENBQUM7S0FDbkY7OEdBTlksbUNBQW1DO2tHQUFuQyxtQ0FBbUMsc0ZBRm5DLENBQUMsRUFBQyxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsUUFBUSxFQUFFLDRCQUE0QixFQUFDLENBQUMsMEJDdEJsRixnbkRBb0NBLDBRRHJCSSxJQUFJLDRGQUNKLGdCQUFnQiwwWUFDaEIsZUFBZSwyUUFDZixjQUFjLDBSQUNkLFdBQVcsc0lBQ1gsbUJBQW1COzsyRkFJVixtQ0FBbUM7a0JBZi9DLFNBQVM7K0JBQ0UseUNBQXlDLGNBR3ZDLElBQUksV0FDUDt3QkFDUCxJQUFJO3dCQUNKLGdCQUFnQjt3QkFDaEIsZUFBZTt3QkFDZixjQUFjO3dCQUNkLFdBQVc7d0JBQ1gsbUJBQW1CO3FCQUNwQixhQUNVLENBQUMsRUFBQyxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsUUFBUSxFQUFFLDRCQUE0QixFQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0NvbXBvbmVudH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge05nSWZ9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQge0Zvcm1Db250cm9sLCBGb3Jtc01vZHVsZSwgUmVhY3RpdmVGb3Jtc01vZHVsZX0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuaW1wb3J0IHtNYXREcmF3ZXJNb2RlLCBNYXRTaWRlbmF2TW9kdWxlfSBmcm9tICdAYW5ndWxhci9tYXRlcmlhbC9zaWRlbmF2JztcbmltcG9ydCB7TWF0UmFkaW9Nb2R1bGV9IGZyb20gJ0Bhbmd1bGFyL21hdGVyaWFsL3JhZGlvJztcbmltcG9ydCB7TWF0QnV0dG9uTW9kdWxlfSBmcm9tICdAYW5ndWxhci9tYXRlcmlhbC9idXR0b24nO1xuaW1wb3J0IHtDb25maWd1cmFibGVGb2N1c1RyYXBGYWN0b3J5LCBGb2N1c1RyYXBGYWN0b3J5fSBmcm9tICdAYW5ndWxhci9jZGsvYTExeSc7XG5cbi8qKiBAdGl0bGUgU2lkZW5hdiB1c2luZyBpbmplY3RlZCBDb25maWd1cmFibGVGb2N1c1RyYXAgKi9cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3NpZGVuYXYtY29uZmlndXJhYmxlLWZvY3VzLXRyYXAtZXhhbXBsZScsXG4gIHRlbXBsYXRlVXJsOiAnc2lkZW5hdi1jb25maWd1cmFibGUtZm9jdXMtdHJhcC1leGFtcGxlLmh0bWwnLFxuICBzdHlsZVVybHM6IFsnc2lkZW5hdi1jb25maWd1cmFibGUtZm9jdXMtdHJhcC1leGFtcGxlLmNzcyddLFxuICBzdGFuZGFsb25lOiB0cnVlLFxuICBpbXBvcnRzOiBbXG4gICAgTmdJZixcbiAgICBNYXRTaWRlbmF2TW9kdWxlLFxuICAgIE1hdEJ1dHRvbk1vZHVsZSxcbiAgICBNYXRSYWRpb01vZHVsZSxcbiAgICBGb3Jtc01vZHVsZSxcbiAgICBSZWFjdGl2ZUZvcm1zTW9kdWxlLFxuICBdLFxuICBwcm92aWRlcnM6IFt7cHJvdmlkZTogRm9jdXNUcmFwRmFjdG9yeSwgdXNlQ2xhc3M6IENvbmZpZ3VyYWJsZUZvY3VzVHJhcEZhY3Rvcnl9XSxcbn0pXG5leHBvcnQgY2xhc3MgU2lkZW5hdkNvbmZpZ3VyYWJsZUZvY3VzVHJhcEV4YW1wbGUge1xuICBtb2RlID0gbmV3IEZvcm1Db250cm9sKCdvdmVyJyBhcyBNYXREcmF3ZXJNb2RlKTtcbiAgaGFzQmFja2Ryb3AgPSBuZXcgRm9ybUNvbnRyb2wobnVsbCBhcyBudWxsIHwgYm9vbGVhbik7XG4gIHBvc2l0aW9uID0gbmV3IEZvcm1Db250cm9sKCdzdGFydCcgYXMgJ3N0YXJ0JyB8ICdlbmQnKTtcblxuICBzaG91bGRSdW4gPSAvKF58Likoc3RhY2tibGl0enx3ZWJjb250YWluZXIpLihpb3xjb20pJC8udGVzdCh3aW5kb3cubG9jYXRpb24uaG9zdCk7XG59XG4iLCI8bWF0LXNpZGVuYXYtY29udGFpbmVyIGNsYXNzPVwiZXhhbXBsZS1jb250YWluZXJcIiAqbmdJZj1cInNob3VsZFJ1blwiIFtoYXNCYWNrZHJvcF09XCJoYXNCYWNrZHJvcC52YWx1ZVwiPlxuICA8bWF0LXNpZGVuYXYgI3NpZGVuYXYgW21vZGVdPVwibW9kZS52YWx1ZSFcIiBbcG9zaXRpb25dPVwicG9zaXRpb24udmFsdWUhXCI+XG4gICAgPHA+PGJ1dHRvbiBtYXQtYnV0dG9uIChjbGljayk9XCJzaWRlbmF2LnRvZ2dsZSgpXCI+VG9nZ2xlPC9idXR0b24+PC9wPlxuICAgIDxwPlxuICAgICAgPGxhYmVsPlRlc3QgaW5wdXQgZm9yIGRyYXdlcjxpbnB1dC8+PC9sYWJlbD5cbiAgICA8L3A+XG4gIDwvbWF0LXNpZGVuYXY+XG5cbiAgPG1hdC1zaWRlbmF2LWNvbnRlbnQ+XG4gICAgPHA+PGJ1dHRvbiBtYXQtYnV0dG9uIChjbGljayk9XCJzaWRlbmF2LnRvZ2dsZSgpXCI+VG9nZ2xlPC9idXR0b24+PC9wPlxuICAgIDxwPlxuICAgICAgPG1hdC1yYWRpby1ncm91cCBjbGFzcz1cImV4YW1wbGUtcmFkaW8tZ3JvdXBcIiBbZm9ybUNvbnRyb2xdPVwibW9kZVwiPlxuICAgICAgICA8bGFiZWw+TW9kZTo8L2xhYmVsPlxuICAgICAgICA8bWF0LXJhZGlvLWJ1dHRvbiB2YWx1ZT1cIm92ZXJcIj5PdmVyPC9tYXQtcmFkaW8tYnV0dG9uPlxuICAgICAgICA8bWF0LXJhZGlvLWJ1dHRvbiB2YWx1ZT1cInNpZGVcIj5TaWRlPC9tYXQtcmFkaW8tYnV0dG9uPlxuICAgICAgICA8bWF0LXJhZGlvLWJ1dHRvbiB2YWx1ZT1cInB1c2hcIj5QdXNoPC9tYXQtcmFkaW8tYnV0dG9uPlxuICAgICAgPC9tYXQtcmFkaW8tZ3JvdXA+XG4gICAgICA8bWF0LXJhZGlvLWdyb3VwIGNsYXNzPVwiZXhhbXBsZS1yYWRpby1ncm91cFwiIFtmb3JtQ29udHJvbF09XCJoYXNCYWNrZHJvcFwiPlxuICAgICAgICA8bGFiZWw+SGFzIEJhY2tkcm9wOjwvbGFiZWw+XG4gICAgICAgIDxtYXQtcmFkaW8tYnV0dG9uIFt2YWx1ZV09XCJudWxsXCI+RGVmYXVsdDwvbWF0LXJhZGlvLWJ1dHRvbj5cbiAgICAgICAgPG1hdC1yYWRpby1idXR0b24gW3ZhbHVlXT1cInRydWVcIj50cnVlPC9tYXQtcmFkaW8tYnV0dG9uPlxuICAgICAgICA8bWF0LXJhZGlvLWJ1dHRvbiBbdmFsdWVdPVwiZmFsc2VcIj5mYWxzZTwvbWF0LXJhZGlvLWJ1dHRvbj5cbiAgICAgIDwvbWF0LXJhZGlvLWdyb3VwPlxuICAgICAgPG1hdC1yYWRpby1ncm91cCBjbGFzcz1cImV4YW1wbGUtcmFkaW8tZ3JvdXBcIiBbZm9ybUNvbnRyb2xdPVwicG9zaXRpb25cIj5cbiAgICAgICAgPGxhYmVsPlBvc2l0aW9uOjwvbGFiZWw+XG4gICAgICAgIDxtYXQtcmFkaW8tYnV0dG9uIHZhbHVlPVwic3RhcnRcIj5TdGFydDwvbWF0LXJhZGlvLWJ1dHRvbj5cbiAgICAgICAgPG1hdC1yYWRpby1idXR0b24gdmFsdWU9XCJlbmRcIj5FbmQ8L21hdC1yYWRpby1idXR0b24+XG4gICAgICA8L21hdC1yYWRpby1ncm91cD5cbiAgICA8L3A+XG4gICAgPHA+XG4gICAgICA8bGFiZWw+VGVzdCBpbnB1dCBmb3IgZHJhd2VyIGNvbnRlbnQ8aW5wdXQvPjwvbGFiZWw+XG4gICAgPC9wPlxuICA8L21hdC1zaWRlbmF2LWNvbnRlbnQ+XG48L21hdC1zaWRlbmF2LWNvbnRhaW5lcj5cblxuPGRpdiAqbmdJZj1cIiFzaG91bGRSdW5cIj5QbGVhc2Ugb3BlbiBvbiBTdGFja2JsaXR6IHRvIHNlZSByZXN1bHQ8L2Rpdj5cbiJdfQ==