{"version":3,"file":"material__sort.js","sources":["../../../../../../src/components-examples/material/sort/sort-overview/sort-overview-example.html","../../../../../../src/components-examples/material/sort/sort-overview/sort-overview-example.ts","../../../../../../src/components-examples/material/sort/sort-harness/sort-harness-example.html","../../../../../../src/components-examples/material/sort/sort-harness/sort-harness-example.ts","../../../../../../src/components-examples/material/sort/index.ts","../../../../../../src/components-examples/material/sort/sort_public_index.ts"],"sourcesContent":["<table matSort (matSortChange)=\"sortData($event)\">\n  <tr>\n    <th mat-sort-header=\"name\">Dessert (100g)</th>\n    <th mat-sort-header=\"calories\">Calories</th>\n    <th mat-sort-header=\"fat\">Fat (g)</th>\n    <th mat-sort-header=\"carbs\">Carbs (g)</th>\n    <th mat-sort-header=\"protein\">Protein (g)</th>\n  </tr>\n\n  <tr *ngFor=\"let dessert of sortedData\">\n    <td>{{dessert.name}}</td>\n    <td>{{dessert.calories}}</td>\n    <td>{{dessert.fat}}</td>\n    <td>{{dessert.carbs}}</td>\n    <td>{{dessert.protein}}</td>\n  </tr>\n</table>\n","import {Component} from '@angular/core';\nimport {Sort} from '@angular/material/sort';\n\nexport interface Dessert {\n  calories: number;\n  carbs: number;\n  fat: number;\n  name: string;\n  protein: number;\n}\n\n/**\n * @title Sorting overview\n */\n@Component({\n  selector: 'sort-overview-example',\n  templateUrl: 'sort-overview-example.html',\n  styleUrls: ['sort-overview-example.css'],\n})\nexport class SortOverviewExample {\n  desserts: Dessert[] = [\n    {name: 'Frozen yogurt', calories: 159, fat: 6, carbs: 24, protein: 4},\n    {name: 'Ice cream sandwich', calories: 237, fat: 9, carbs: 37, protein: 4},\n    {name: 'Eclair', calories: 262, fat: 16, carbs: 24, protein: 6},\n    {name: 'Cupcake', calories: 305, fat: 4, carbs: 67, protein: 4},\n    {name: 'Gingerbread', calories: 356, fat: 16, carbs: 49, protein: 4},\n  ];\n\n  sortedData: Dessert[];\n\n  constructor() {\n    this.sortedData = this.desserts.slice();\n  }\n\n  sortData(sort: Sort) {\n    const data = this.desserts.slice();\n    if (!sort.active || sort.direction === '') {\n      this.sortedData = data;\n      return;\n    }\n\n    this.sortedData = data.sort((a, b) => {\n      const isAsc = sort.direction === 'asc';\n      switch (sort.active) {\n        case 'name': return compare(a.name, b.name, isAsc);\n        case 'calories': return compare(a.calories, b.calories, isAsc);\n        case 'fat': return compare(a.fat, b.fat, isAsc);\n        case 'carbs': return compare(a.carbs, b.carbs, isAsc);\n        case 'protein': return compare(a.protein, b.protein, isAsc);\n        default: return 0;\n      }\n    });\n  }\n}\n\nfunction compare(a: number | string, b: number | string, isAsc: boolean) {\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n}\n","<table matSort (matSortChange)=\"sortData($event)\">\n  <tr>\n    <th mat-sort-header=\"name\">Dessert</th>\n    <th mat-sort-header=\"calories\">Calories</th>\n    <th mat-sort-header=\"fat\" [disabled]=\"disableThirdHeader\">Fat</th>\n    <th mat-sort-header=\"carbs\">Carbs</th>\n    <th mat-sort-header=\"protein\">Protein</th>\n  </tr>\n\n  <tr *ngFor=\"let dessert of sortedData\">\n    <td>{{dessert.name}}</td>\n    <td>{{dessert.calories}}</td>\n    <td>{{dessert.fat}}</td>\n    <td>{{dessert.carbs}}</td>\n    <td>{{dessert.protein}}</td>\n  </tr>\n</table>\n","import {Component} from '@angular/core';\nimport {Sort} from '@angular/material/sort';\n\n/**\n * @title Testing with MatSortHarness\n */\n@Component({\n  selector: 'sort-harness-example',\n  templateUrl: 'sort-harness-example.html',\n})\nexport class SortHarnessExample {\n  disableThirdHeader = false;\n  desserts = [\n    {name: 'Frozen yogurt', calories: 159, fat: 6, carbs: 24, protein: 4},\n    {name: 'Ice cream sandwich', calories: 237, fat: 9, carbs: 37, protein: 4},\n    {name: 'Eclair', calories: 262, fat: 16, carbs: 24, protein: 6},\n    {name: 'Cupcake', calories: 305, fat: 4, carbs: 67, protein: 4},\n    {name: 'Gingerbread', calories: 356, fat: 16, carbs: 49, protein: 4},\n  ];\n\n  sortedData = this.desserts.slice();\n\n  sortData(sort: Sort) {\n    const data = this.desserts.slice();\n\n    if (!sort.active || sort.direction === '') {\n      this.sortedData = data;\n    } else {\n      this.sortedData = data.sort((a, b) => {\n        const aValue = (a as any)[sort.active];\n        const bValue = (b as any)[sort.active];\n        return (aValue < bValue ? -1 : 1) * (sort.direction === 'asc' ? 1 : -1);\n      });\n    }\n  }\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {MatSortModule} from '@angular/material/sort';\nimport {SortOverviewExample} from './sort-overview/sort-overview-example';\nimport {SortHarnessExample} from './sort-harness/sort-harness-example';\n\nexport {SortHarnessExample, SortOverviewExample};\n\nconst EXAMPLES = [\n  SortHarnessExample,\n  SortOverviewExample,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatSortModule,\n  ],\n  declarations: EXAMPLES,\n  exports: EXAMPLES,\n  entryComponents: EXAMPLES,\n})\nexport class SortExamplesModule {\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["i0.ɵɵelementStart","i0.ɵɵtext","i0.ɵɵelementEnd","i0.ɵɵadvance","i0.ɵɵtextInterpolate","i0.ɵɵlistener","i0.ɵɵtemplate","i0.ɵɵproperty"],"mappings":"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"}